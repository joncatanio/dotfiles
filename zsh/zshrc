# Environment Variables
if [[ "$OSTYPE" == "darwin"* ]]; then # MacOS
   #export PATH=$PATH:$HOME/Library/Android/sdk/platform-tools

   # OpenSSL env vars since OSX is phasing it out. These depend on Homebrew.
   #export OPENSSL_INCLUDE_DIR=`brew --prefix openssl`/include
   #export OPENSSL_LIB_DIR=`brew --prefix openssl`/lib
   #export DEP_OPENSSL_INCLUDE=`brew --prefix openssl`/include

   # Export the Java path if available, haven't found a better way to do it
   export JAVA_HOME=`/usr/libexec/java_home`
   alias setJdk14='export JAVA_HOME=$(/usr/libexec/java_home -v 14)'
   alias setJdk13='export JAVA_HOME=$(/usr/libexec/java_home -v 13)'
   alias setJdk11='export JAVA_HOME=$(/usr/libexec/java_home -v 11)'
   alias setJdk8='export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)'
   alias setJdkGraal='export JAVA_HOME=/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.0.0/Contents/Home'

   # Set `n` package installation directory
   export N_PREFIX=$HOME/Development
elif [[ "$OSTYPE" == "linux-gnu" ]]; then # Linux
   :
fi

#export PATH="$HOME/open-source-bin/bin:$PATH"

# Path to oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Theme and theme configurations
ZSH_THEME="spaceship"

# Spaceship theme configurations
# Prompt
SPACESHIP_PROMPT_SEPARATE_LINE=false
SPACESHIP_BATTERY_SHOW=false
SPACESHIP_GCLOUD_SHOW=false
SPACESHIP_AWS_SHOW=false
SPACESHIP_DOCKER_SHOW=false

# Directory
SPACESHIP_DIR_TRUNC=1
SPACESHIP_DIR_TRUNC_REPO=false

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# Aliases
# For a full list of active aliases, run `alias`.
# JSON formatting utility
alias prettyjson="python3 -m json.tool"

# Distribution specific definitions
if [[ "$OSTYPE" == "darwin"* ]]; then # MacOS
   # Wifi alias on/off
   WIFI_PORT='en0'
   alias wifi="networksetup -setairportpower $WIFI_PORT"
elif [[ "$OSTYPE" == "linux-gnu" ]]; then # Linux
   :
fi

# Startup commands
if [[ "$OSTYPE" == "darwin"* ]]; then # MacOS
   eval "$(rbenv init -)"
fi

# Optional startup commands
#screenfetch -E
#fortune | cowsay -f moose | lolcat

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh

# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/jonathan.catanio/Development/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/jonathan.catanio/Development/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/jonathan.catanio/Development/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/jonathan.catanio/Development/google-cloud-sdk/completion.zsh.inc'; fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/jonathan.catanio/.sdkman"
[[ -s "/Users/jonathan.catanio/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/jonathan.catanio/.sdkman/bin/sdkman-init.sh"
